---
- name: Check for eitsnowp user
  shell: "grep eitsnowp /etc/passwd | wc -l"
  register: result
 
- name: Add eitsnowp group
  group:
    gid: "{{ item.gid }}"
    name: "{{ item.uname }}"
    state: present
  with_items: "{{ users2add }}"
  when: result.stdout|int < 1

- name: Add eitsnowp user
  user:
    name: "{{ item.uname }}"
    comment: "{{ item.gecos }}"
    shell: "{{ item.shell }}"
    uid: "{{ item.uid }}"
    group: "{{ item.uname }}"
    system: yes
    state: present
  when: result.stdout|int < 1
  with_items: "{{ users2add }}"

- name: Ensure ansible user accepts the SSH key
  authorized_key:
          user: "{{ item.uname }}"
          key: "{{ lookup('file', item.kfile ) }}"
          validate_certs: no
          state: present
  with_items: "{{ users2add }}"

- name: Lock the {{ item.uname }} account
  shell: "passwd -l {{ item.uname }}"
  with_items: "{{ users2add }}"

- name: Set passwd change date to 99999 if forced password change for {{ item.uname }}
  shell: "chage -E -1 -I -1 -M -1 {{ item.uname }}"
  with_items: "{{ users2add }}"

- name: Set passwd change date to 99999 if forced password change for {{ item.uname }}
  shell: "chage -d99999 {{ item.uname }}"
  with_items: "{{ users2add }}"

- name: find paths
  shell: "source /etc/profile;which {{ item.binchk }} 2>&1 | grep -v 'no {{ item.binchk }}'"
  with_items: "{{ usudocmds }}"
  register: path_results
  ignore_errors: yes

- name: output info
  debug: 
    msg: '{{ item.stdout }}{{ item.item.binargs }}'
    verbosity: 2
  when: item.rc == 0
  with_items: "{{ path_results.results }}"

- name: setup cmd aliases
  set_fact:
    usudocmda: "{{ usudocmda }}{{ item.stdout }}{{ item.item.binargs }}, "
  when: item.rc == 0
  with_items: "{{ path_results.results }}"

- name: create a backup copy of the sudoers file
  copy:
      src: /etc/sudoers
      dest: '/root/sudoers.ansible'
      remote_src: true

- name: add eitsnowp CMDALIAS 
  lineinfile:
    dest: "{{ sudofile }}"
    line: "Cmnd_Alias      EITSNOWP_CMD = {{ usudocmda | regex_replace(',\\s+$','') }}"
    regexp: '^Cmnd_Alias\s+EITSNOWP_CMD.*$'
    insertafter: '^Cmnd_Alias\s+TMPSU.*$'
    state: present

- name: add eitsnowp sudo entry
  lineinfile:
    dest: "{{ sudofile }}"
    line: 'eitsnowp	ALL = NOPASSWD: EITSNOWP_CMD'
    regexp: '^eitsnowp\s.*$'
    insertafter: '^unixsvc'
    state: present

- name: add /sbin and /usr/sbin to secure_path if secure_path not defined
  lineinfile:
    dest: "{{ sudofile }}"
    line: 'Defaults	secure_path=/bin:/usr/bin:/sbin:/usr/sbin'
    regexp: 'Defaults\s+secure_path'
    insertafter: '^Defaults\s+group'
    state: present

- name: add !mail_no_user defaults
  lineinfile:
    dest: "{{ sudofile }}"
    line: 'Defaults !mail_no_user'
    regexp: 'Defaults\s.*mail_no_user$'
    insertafter: '^Defaults !syslog'
    state: present

- name: validate sudoers
  shell: '/usr/sbin/visudo -cf {{ sudofile }} 2>/dev/null||/usr/local/sbin/visudo -cf {{ sudofile }} 2>/dev/null'
