
###
# Enables bypass of the speculative storage to remediate CVE-2018-3639
#
# 
#
###
---
- name: Apply registry key changes if required
  ansible.windows.win_powershell:
    script: |
      $WarningPreference = "Continue"
      $ErrorActionPreference = "Stop"

      $ProcessorManufacturer = (Get-CimInstance -ClassName Win32_Processor).Manufacturer
      $HasIntelChipset = $ProcessorManufacturer -match "Intel"
      $RequiresReboot = $false

      if ($HasIntelChipset) {
          try {
            $FeaturesettingsOverride = Get-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "FeatureSettingsOverride"
          }
          catch {
            reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v FeatureSettingsOverride /t REG_DWORD /d 8
            $RequiresReboot = $true
            $FeaturesettingsOverride = Get-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "FeatureSettingsOverride"
          }

          if($FeaturesettingsOverride.FeatureSettingsOverride -ne 8) {
            Write-Host "$($env:COMPUTERNAME) requires attention - FeatureSettingsOverride is $($FeaturesettingsOverride.FeatureSettingsOverride)"
          }

          try {
            $FeatureSettingsOverrideMask = Get-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "FeatureSettingsOverrideMask"
          }
          catch {
            reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v FeatureSettingsOverrideMask /t REG_DWORD /d 3
            $RequiresReboot = $true
            $FeatureSettingsOverrideMask = Get-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "FeatureSettingsOverrideMask"
          }

          if ($FeatureSettingsOverrideMask.FeatureSettingsOverrideMask -ne 3) {
            Write-Host "$($env:COMPUTERNAME) requires attention - FeatureSettingsOverrideMask is $($FeatureSettingsOverrideMask.FeatureSettingsOverrideMask)"
          }
          
          $HyperVState = (Get-WindowsOptionalFeature -Online -FeatureName "Microsoft-Hyper-V" | Select State).State

          if ($HyperVState -ne "Disabled") {
              Write-Warning "$($env:COMPUTERNAME) has Hyper-V potentially enabled and requires attention"
          }

          if ($RequiresReboot) {
              Write-Host "$($env:COMPUTERNAME) must be rebooted"
          }
      }
      else {
          Write-Warning "$($env:COMPUTERNAME) has unexpected chipset manufacturer: $($ProcessorManufacturer)"
      }